---
swagger: "2.0"
info:
  version: "1.0.1"
  title: "The movie database"
paths:
  /movies:
    get:
      description: "Returns all movies"
      operationId: "getMovies"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            title: "ArrayOfMovies"
            items:
              $ref: "#/definitions/movie"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Problem"
      x-swagger-router-controller: "Default"
    post:
      description: "Add a new movie"
      operationId: "addMovie"
      parameters:
      - in: "body"
        name: "movie"
        description: "The new movie"
        required: true
        schema:
          $ref: "#/definitions/movie"
      responses:
        201:
          description: "The new movie"
          schema:
            $ref: "#/definitions/movie"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Problem"
      x-swagger-router-controller: "Default"
  /movies/{id}:
    get:
      description: "Returns a single movie"
      operationId: "getMovieById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the movie"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/movie"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Problem"
      x-swagger-router-controller: "Default"
    put:
      description: "Update an existing movie"
      operationId: "updateMovieById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the movie"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "movie"
        description: "The movie"
        required: true
        schema:
          $ref: "#/definitions/movie"
      responses:
        200:
          description: "The new movie"
          schema:
            $ref: "#/definitions/movie"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Problem"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete a movie"
      operationId: "deleteMovieById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the movie"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Movie deleted"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Problem"
      x-swagger-router-controller: "Default"
definitions:
  movie:
    type: "object"
    required:
    - "id"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      ratings:
        $ref: "#/definitions/movie_ratings"
      criticsConsensus:
        type: "string"
      abridgedDirectors:
        type: "array"
        items:
          type: "string"
      abridgedCast:
        type: "array"
        items:
          $ref: "#/definitions/cast"
      posters:
        $ref: "#/definitions/posters"
  cast:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      characters:
        type: "array"
        items:
          type: "string"
  posters:
    properties:
      thumbnail:
        type: "string"
        format: "uri"
      profile:
        type: "string"
        format: "uri"
      detailed:
        type: "string"
        format: "uri"
      original:
        type: "string"
        format: "uri"
  Problem:
    type: "object"
    properties:
      type:
        type: "string"
        format: "uri"
        example: "https://zalando.github.io/problem/constraint-violation"
        description: "An absolute URI that identifies the problem type.  When dereferenced,\n\
          it SHOULD provide human-readable documentation for the problem type\n(e.g.,\
          \ using HTML).\n"
        default: "about:blank"
      title:
        type: "string"
        description: "A short, summary of the problem type. Written in english and\
          \ readable\nfor engineers (usually not suited for non technical stakeholders\
          \ and\nnot localized); example: Service Unavailable\n"
      status:
        type: "integer"
        format: "int32"
        example: 503
        description: "The HTTP status code generated by the origin server for this\
          \ occurrence\nof the problem.\n"
        minimum: 100.0
        maximum: 600.0
        exclusiveMaximum: true
      detail:
        type: "string"
        example: "Connection to database timed out"
        description: "A human readable explanation specific to this occurrence of\
          \ the\nproblem.\n"
      instance:
        type: "string"
        format: "uri"
        description: "An absolute URI that identifies the specific occurrence of the\
          \ problem.\nIt may or may not yield further information if dereferenced.\n"
  movie_ratings:
    properties:
      criticsScore:
        type: "integer"
        minimum: 0.0
        maximum: 100.0
      audienceScore:
        type: "integer"
        minimum: 0.0
        maximum: 100.0
